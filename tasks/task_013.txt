# Task ID: 13
# Title: Implement Score and Progression System
# Status: pending
# Dependencies: 6, 12
# Priority: medium
# Description: Create a comprehensive scoring system with persistent high scores and progression tracking.
# Details:
1. Implement score calculation based on brick destruction
2. Create high score tracking and display
3. Implement wave progression difficulty scaling
4. Add persistent storage for player progress
5. Create score multiplier system
6. Implement achievement tracking

```dart
class ScoreSystem {
  int currentScore = 0;
  int highScore = 0;
  double multiplier = 1.0;
  
  void addScore(int basePoints, int waveIndex) {
    final points = (basePoints * multiplier * (1 + waveIndex * 0.1)).round();
    currentScore += points;
    
    if (currentScore > highScore) {
      highScore = currentScore;
      saveHighScore();
    }
  }
  
  void increaseMultiplier() {
    multiplier = min(multiplier + 0.1, 3.0);
  }
  
  void resetMultiplier() {
    multiplier = 1.0;
  }
  
  Future<void> loadHighScore() async {
    final prefs = await SharedPreferences.getInstance();
    highScore = prefs.getInt('highScore') ?? 0;
  }
  
  Future<void> saveHighScore() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setInt('highScore', highScore);
  }
}
```

# Test Strategy:
1. Test score calculation with different scenarios
2. Verify high score updates and persistence
3. Test difficulty scaling with wave progression
4. Validate persistence of player progress
5. Test multiplier system
6. Verify achievement tracking and unlocks
