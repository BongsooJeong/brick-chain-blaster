# Task ID: 8
# Title: Implement Item System
# Status: pending
# Dependencies: 5, 6
# Priority: medium
# Description: Create the item system where players can collect and use power-ups during gameplay.
# Details:
1. Create Item component with different types (multi-ball, laser, etc.)
2. Implement item collection through ball collision
3. Create item inventory display
4. Implement item activation system
5. Add visual effects for active items
6. Create item duration tracking

```dart
enum ItemType {
  multiBall,
  laser,
  bomb,
  extraLife
}

class Item extends BodyComponent with ContactCallbacks {
  final ItemType type;
  
  Item({required this.type, required Vector2 position});
  
  @override
  Body createBody() {
    // Create physics body for item
  }
  
  @override
  void beginContact(Object other, Contact contact) {
    if (other is Ball) {
      collect();
    }
  }
  
  void collect() {
    game.itemInventory.addItem(type);
    removeFromParent();
  }
}

class ItemInventory {
  final Map<ItemType, int> items = {};
  
  void addItem(ItemType type) {
    items[type] = (items[type] ?? 0) + 1;
  }
  
  bool useItem(ItemType type) {
    if ((items[type] ?? 0) > 0) {
      items[type] = items[type]! - 1;
      applyItemEffect(type);
      return true;
    }
    return false;
  }
  
  void applyItemEffect(ItemType type) {
    switch (type) {
      case ItemType.multiBall:
        // Double current balls for this turn
        break;
      // Handle other item types
    }
  }
}
```

# Test Strategy:
1. Test item generation and placement
2. Verify item collection through ball collision
3. Test inventory display updates
4. Validate item activation and effects
5. Test item duration and expiration
6. Verify visual effects for active items
